{"ast":null,"code":"var _jsxFileName = \"/app/src/components/PrivateRoute.tsx\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  role,\n  children\n}) => {\n  const userRole = localStorage.getItem(\"role\"); // tu lugar donde guardas el rol\n\n  // Convertir role a array si viene como string\n  const allowedRoles = Array.isArray(role) ? role : [role];\n\n  // ðŸ”¹ SuperAdmin siempre puede acceder\n  if (userRole !== \"superadmin\" && !allowedRoles.includes(userRole || \"\")) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","role","children","userRole","localStorage","getItem","allowedRoles","Array","isArray","includes","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ninterface PrivateRouteProps {\r\n  role: string | string[];\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ role, children }) => {\r\n  const userRole = localStorage.getItem(\"role\"); // tu lugar donde guardas el rol\r\n\r\n  // Convertir role a array si viene como string\r\n  const allowedRoles = Array.isArray(role) ? role : [role];\r\n\r\n  // ðŸ”¹ SuperAdmin siempre puede acceder\r\n  if (userRole !== \"superadmin\" && !allowedRoles.includes(userRole || \"\")) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO5C,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EACxE,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACP,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;;EAExD;EACA,IAAIE,QAAQ,KAAK,YAAY,IAAI,CAACG,YAAY,CAACG,QAAQ,CAACN,QAAQ,IAAI,EAAE,CAAC,EAAE;IACvE,oBAAON,OAAA,CAACF,QAAQ;MAACe,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,oBAAOjB,OAAA,CAAAE,SAAA;IAAAG,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACa,EAAA,GAZIf,YAAyC;AAc/C,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}